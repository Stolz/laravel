<?xml version="1.0"?>

<ruleset name="Stolz">

	<description>Custom PSR-2 rules for Laravel</description>

	<exclude-pattern>/bootstrap/cache/</exclude-pattern>
	<exclude-pattern>/public/</exclude-pattern>
	<exclude-pattern>/storage/</exclude-pattern>
	<exclude-pattern>/vendor/</exclude-pattern>

	<!--RULES ARE IN ALPHABETICAL ORDER-->

	<!--Only one statemet per line -->
	<rule ref="Generic.Formatting.DisallowMultipleStatements.SameLine"/>

	<!--Use space after cast-->
	<rule ref="Generic.Formatting.SpaceAfterCast"/>

	<!--Function name in camelCase-->
	<rule ref="Generic.NamingConventions.CamelCapsFunctionName">
		<!--Allow helpers with snake_case-->
		<exclude-pattern>/resources/helpers.php</exclude-pattern>
	</rule>

	<!--PHP5 constructor syntax "function __construct()"-->
	<rule ref="Generic.NamingConventions.ConstructorName"/>

	<!--Make sure functions are not too complex-->
	<rule ref="Generic.Metrics.CyclomaticComplexity"/>
	<rule ref="Generic.Metrics.NestingLevel"/>

	<!--Check for deprecated functions-->
	<rule ref="Generic.PHP.DeprecatedFunctions"/>

	<!--Avoid unnecessary string concatenations-->
	<rule ref="Generic.Strings.UnnecessaryStringConcat"/>

	<!--Suppress warning for some files without PHP code-->
	<rule ref="Internal.NoCodeFound">
		<exclude-pattern>/resources/views/</exclude-pattern>
	</rule>

	<!--Ensure all functions have comment with proper format (A description and both @param and @return tags-->
	<rule ref="PEAR.Commenting.FunctionComment">
		<!--But allow @param without description-->
		<exclude name="PEAR.Commenting.FunctionComment.MissingParamComment"/>

		<!--And do not enforce proper parameter alignment-->
		<exclude name="PEAR.Commenting.FunctionComment.SpacingAfterParamType"/>
	</rule>

	<!--Use PHPCompatibility standard-->
	<config name="installed_paths" value="vendor/wimg/php-compatibility" />
	<config name="testVersion" value="7.2-"/>
	<rule ref="PHPCompatibility"/>

	<!--Single responsability files-->
	<rule ref="PSR1.Files.SideEffects.FoundWithSymbols"/>

	<!--Allow declaring some classes without namespace-->
	<rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
		<exclude-pattern>/database/</exclude-pattern>
	</rule>

	<!--Use PSR2 standard with a few exceptions-->
	<rule ref="PSR2">
		<!--Allow one line control structures to have no curly braces-->
		<exclude name="Generic.ControlStructures.InlineControlStructure.NotAllowed"/>

		<!--Allow long lines-->
		<exclude name="Generic.Files.LineLength.TooLong"/>

		<!--Allow spaces after open brace for spacing the "!" logical operator `if( ! $condition)`-->
		<exclude name="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace"/>
		<exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace"/>

		<!--Do not enforce control structures curly braces on the same line-->
		<exclude name="Squiz.ControlStructures.ControlSignature"/>
	</rule>

	<!--Do not use spaces gaps for array brakets-->
	<rule ref="Squiz.Arrays.ArrayBracketSpacing"/>

	<!--Use "self" instead of class name when possible-->
	<rule ref="Squiz.Classes.SelfMemberReference"/>

	<!--No duplicated class properties-->
	<rule ref="Squiz.Classes.DuplicateProperty"/>

	<!--Disallow size functions in loops"/>-->
	<rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>

	<!--PHP functions in lowecase-->
	<rule ref="Squiz.PHP.LowercasePHPFunctions"/>

	<!--Force only one space at both sides of logical operators-->
	<rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>

	<!--Force space at both sides of operatos-->
	<rule ref="Squiz.WhiteSpace.OperatorSpacing"/>

	<!--No whitespace before a semicolon-->
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>

	<!--Blade files need close tags-->
	<rule ref="Zend.Files.ClosingTag.NotAllowed">
		<exclude-pattern>/resources/views/*.blade.php</exclude-pattern>
	</rule>

	<!--Variable names in camelCase-->
	<rule ref="Zend.NamingConventions.ValidVariableName">-->
		<!--Protected variable don't need an underscore prefix-->
		<exclude name="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
	</rule>

</ruleset>
